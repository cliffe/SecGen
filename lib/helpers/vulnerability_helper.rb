require_relative '../objects/vulnerability.rb'
require_relative '../constants.rb'

class VulnerabilityHelper
  # Assign all values to a new vulnerability object
  # @param vulnerability_hash [Hash]
  # @return [Object] Vulnerability object containing all available values
  def getVulnerabilityObject(vulnerability_hash)
    vulnerability = Vulnerability.new
    vulnerability.attributes[:type] = vulnerability_hash['type'] unless vulnerability_hash['type'].nil?
    vulnerability.attributes[:privilege] = vulnerability_hash['privilege'] unless vulnerability_hash['privilege'].nil?
    vulnerability.attributes[:access] = vulnerability_hash['access'] unless vulnerability_hash['access'].nil?
    vulnerability.attributes[:puppets] = vulnerability_hash['puppets'] unless vulnerability_hash['puppets'].nil?
    vulnerability.attributes[:details] = vulnerability_hash['details'] unless vulnerability_hash['details'].nil?
    vulnerability.attributes[:ports] = vulnerability_hash['ports'] unless vulnerability_hash['ports'].nil?
    vulnerability.attributes[:platform] = vulnerability_hash['platform'] unless vulnerability_hash['platform'].nil?
    vulnerability.attributes[:name] = vulnerability_hash['name'] unless vulnerability_hash['name'].nil?
    vulnerability.attributes[:cve] = vulnerability_hash['cve'] unless vulnerability_hash['cve'].nil?
    vulnerability.attributes[:files] = vulnerability_hash['files'] unless vulnerability_hash['files'].nil?
    vulnerability.attributes[:scripts] = vulnerability_hash['scripts'] unless vulnerability_hash['scripts'].nil?
    vulnerability.attributes[:difficulty] = vulnerability_hash['difficulty'] unless vulnerability_hash['difficulty'].nil?
    vulnerability.attributes[:cvss_rating] = vulnerability_hash['cvss_rating'] unless vulnerability_hash['cvss_rating'].nil?
    vulnerability.attributes[:cvss_score] = vulnerability_hash['cvss_score'] unless vulnerability_hash['cvss_score'].nil?
    vulnerability.attributes[:vector_string] = vulnerability_hash['vector_string'] unless vulnerability_hash['vector_string'].nil?
    return vulnerability
  end
end