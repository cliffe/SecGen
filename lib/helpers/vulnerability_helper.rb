require_relative '../objects/vulnerability.rb'
require_relative '../constants.rb'

class VulnerabilityHelper
  # Assign all values to a new vulnerability object
  # @param vulnerability_hash [Hash]
  # @return [Object] Vulnerability object containing all available values
  def getVulnerabilityObject(vulnerability_hash)
    vulnerability = Vulnerability.new
    vulnerability.type = vulnerability_hash['type'] if vulnerability_hash['type']
    vulnerability.privilege = vulnerability_hash['privilege'] if vulnerability_hash['privilege']
    vulnerability.access = vulnerability_hash['access'] if vulnerability_hash['access']
    vulnerability.puppets = vulnerability_hash['puppets'] if vulnerability_hash['puppets']
    vulnerability.details = vulnerability_hash['details'] if vulnerability_hash['details']
    vulnerability.ports = vulnerability_hash['ports'] if vulnerability_hash['ports']
    vulnerability.platform = vulnerability_hash['platform'] if vulnerability_hash['platform']
    vulnerability.name = vulnerability_hash['name'] if vulnerability_hash['name']
    vulnerability.cve = vulnerability_hash['cve'] if vulnerability_hash['cve']
    vulnerability.files = vulnerability_hash['files'] if vulnerability_hash['files']
    vulnerability.scripts = vulnerability_hash['scripts'] if vulnerability_hash['scripts']
    vulnerability.difficulty = vulnerability_hash['difficulty'] if vulnerability_hash['difficulty']
    vulnerability.cvss_rating = vulnerability_hash['cvss_rating'] if vulnerability_hash['cvss_rating']
    vulnerability.cvss_score = vulnerability_hash['cvss_score'] if vulnerability_hash['cvss_score']
    vulnerability.vector_string = vulnerability_hash['vector_string'] if vulnerability_hash['vector_string']
    return vulnerability
  end
end