<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

		<name>Understanding Software Vulnerabilities: Injection Attacks, Race Conditions, and Format String Attacks</name>
	  <author>Z. Cliffe Schreuders</author>
	  <description>

			A MetaCTF lab. In your home directory you will find some binaries that you need to reverse engineer in order to determine the password that the program expects. Once you determing the password, run the program and enter the password to receive the file.

		[Lab sheet here](https://docs.google.com/document/d/1GKmNARyF2-RQ-jK1_w4Y7V9vNtXsJvMmvXSbnadyEoE/edit?usp=sharing).
		</description>

	  <type>ctf-lab</type>
	  <type>lab-sheet</type>
	  <difficulty>intermediate</difficulty>

  <system>
    <system_name>desktop</system_name>
    <base platform="linux" type="desktop" distro="Buster"/>

    <utility module_path=".*/reversing_tools"/>

		<input into_datastore="main_account" >
			<generator type="account">
				<input into="username">
					<generator type="random_sanitised_word">
						<input into="wordlist">
							<value>mythical_creatures</value>
						</input>
					</generator>
				</input>
				<input into="password">
					<value>tiaspbiqe2r</value>
				</input>
				<input into="super_user">
					<value>false</value>
				</input>
			</generator>
		</input>

    <utility module_path=".*/parameterised_accounts">
			<input into="accounts">
				<datastore>main_account</datastore>

				<generator type="account">
					<input into="username">
						<value>second</value>
					</input>
					<input into="password">
						<value>tiaspbiqe2r</value>
					</input>
					<input into="super_user">
						<value>false</value>
					</input>
				</generator>
			</input>
    </utility>


		<utility module_path=".*/kde_minimal">
			<input into="autologin_user">
				<datastore access="0" access_json="['username']">main_account</datastore>
			</input>
			<input into="accounts">
				<datastore>main_account</datastore>
			</input>
			<input into="autostart_konsole">
				<value>true</value>
			</input>
		</utility>
		<utility module_path=".*/handy_cli_tools"/>
		<utility module_path=".*/hash_tools"/>

    <utility module_path=".*/metactf">
      <input into="challenge_list">
				<generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/Ch3-ExtraFormatStr/Ch3_Format0_Leak</value>
          </input>
        </generator>
				<generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/Ch3-ExtraFormatStr/Ch3_Format1_LeakDollar</value>
          </input>
        </generator>
				<generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/Ch3-ExtraFormatStr/Ch3_Format2_nCorruptKey</value>
          </input>
        </generator>
				<generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/Ch3-ExtraFormatStr/Ch3_Format3_nWriteKey</value>
          </input>
        </generator>
				<generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/SSE/Ch_BashInjection_1</value>
          </input>
        </generator>
				<!-- <generator type="metactf_challenge">
          <input into="challenge_path">
						<value>src_sse/SSE/Ch_BashInjection_2</value>
          </input>
        </generator> -->
      </input>
      <input into="account">
        <datastore>main_account</datastore>
      </input>
    </utility>

    <network type="private_network" range="dhcp"/>
  </system>

</scenario>
